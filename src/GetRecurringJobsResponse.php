<?php

namespace InTradeSys\eBay\bulkDataExchange;

/*
 * This class was generated from a WSDL file from November 27, 2020, 4:15 pm.
 * Executed by globalsync.
 * Provided and maintained by:
 *
 *  InTradeSys GmbH
 *  Dillenburger Str. 75
 *  D-51105 Cologne
 *  ---
 *  https://www.intradesys.com
 */

/**
 * Type defining the root container of the
 * getRecurringJobs
 * response. The response includes one or more
 * recurringJobDetail
 * containers, and each container consists of a unique identifier for the recurring job, the current status of the
 * recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the
 * download job type. The response also includes the standard output fields like
 * ack
 * ,
 * timestamp
 * ,
 * version
 * , and any errors/warnings that are generated by the request to retrieve recurring jobs.
 **/
class GetRecurringJobsResponse extends EbatNsBulkDataExchange_Response
{
    const TAG = 'GetRecurringJobsResponse';
    const NAME = 'GetRecurringJobsResponse';
    const XMLNS = 'http://www.ebay.com/marketplace/services';

    /**
     * @var RecurringJobDetail[]|null
     */
    protected $recurringJobDetail = [];


    /**
     * @return RecurringJobDetail[]|RecurringJobDetail|null|mixed Depending on the assigned data converter: mixed
     * @param int|null $index (optional)
     */
    public function getRecurringJobDetail($index = null)
    {
        return $this->_dc($index === null
            ? $this->recurringJobDetail
            : (count($this->recurringJobDetail) > $index
                ? $this->recurringJobDetail[$index]
                : null), 'recurringJobDetail');
    }

    /**
     * @param RecurringJobDetail|null|RecurringJobDetail[] $value
     * @param int|null $index (optional)
     * @return void
     */
    public function setRecurringJobDetail($value, $index = null)
    {
        if ($index === null) {
            $this->recurringJobDetail = $value;
        } else {
            $this->recurringJobDetail[$index] = [];
            
            foreach ($value as $item) {
                $this->addRecurringJobDetail($item);
            }
        }
    }

    /**
     * @param RecurringJobDetail|null $value
     * @return void
     */
    public function addRecurringJobDetail($value)
    {
        $this->recurringJobDetail[] = $value;
    }
    
    /**
     * Register child elements and attributes
     */
    public static function _register()
    {
        self::assignElements(['recurringJobDetail' => ['type' => 'RecurringJobDetail', 'xmlns' => self::XMLNS, 'cardinality' => '0..*']], parent::NAME);
        self::assignAttributes([]);
    }

}

GetRecurringJobsResponse::_register();
